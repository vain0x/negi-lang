// ネギ言語処理系のデモンストレーション

#runtime "hsp3utf"

#include "negi_lang.hsp"

#module m_negi_lang_demo

#const true 1
#const false 0

#const ty_int negi_lang_ty_int
#const ty_str negi_lang_ty_str
#define x_argc negi_lang_extern_arg_len()
#define ctype x_arg_ty(%1) negi_lang_extern_arg_ty(%1)
#define ctype x_arg_int(%1) negi_lang_extern_arg_int(%1)
#define ctype x_arg_str(%1) negi_lang_extern_arg_str(%1)
#define x_result_err(%1) negi_lang_extern_result_err (%1)
#define x_result_int(%1) negi_lang_extern_result_int (%1)
#define x_result_str(%1) negi_lang_extern_result_str (%1)
#define x_define(%1, %2) negi_lang_extern_fun_add (%1), (%2)

#deffunc app_initialize

	s_event_kind = ""
	s_event_obj_id = 0

	x_define "hsp3_await", *l_hsp3_await
	x_define "hsp3_event_kind", *l_hsp3_event_kind
	x_define "hsp3_event_obj_id", *l_hsp3_event_obj_id
	x_define "hsp3_button", *l_hsp3_button
	x_define "hsp3_mes", *l_hsp3_mes
	return

*l_hsp3_await

	s_event_kind = ""
	await x_arg_int(0)
	x_result_int s_event_kind != ""
	return

*l_hsp3_event_kind

	x_result_str s_event_kind
	return

*l_hsp3_event_obj_id

	x_result_int s_event_obj_id
	return

*l_hsp3_button

	button gosub x_arg_str(0), *l_hsp3_button_click
	x_result_int stat // オブジェクト ID
	return

*l_hsp3_button_click

	s_event_kind = "button"
	s_event_obj_id = stat // オブジェクト ID
	return

*l_hsp3_mes

	if x_argc != 1 {
		x_result_err "mes error"
		return
	}
	if x_arg_ty(0) == ty_int {
		mes x_arg_int(0)
	} else : if x_arg_ty(0) == ty_str {
		mes x_arg_str(0)
	} else {
		logmes "unknown type " +(x_arg_ty(0) - ty_int)
	}

	x_result_int 0
	return

#deffunc app_eval str src, \
	local exit_code, local output

	negi_lang_eval_src src, exit_code
	negi_lang_err_summary output

	if output != "" {
		logmes output
	}
	if exit_code != 0 {
		logmes "exit_code = " + exit_code
		dialog "エラーが発生しました。", 1, "negi_lang_demo"
	}
	return

#deffunc app_main

	app_initialize
	app_eval {"
		let mes = fun(msg) hsp3_mes(msg);

		let button = fun(label, callback) {
			hsp3_button(label);
		};
		let poll = fun() {
			let status = hsp3_await(16);

			if (status != 0) {
				let kind = hsp3_event_kind();
				let obj_id = hsp3_event_obj_id();

				hsp3_mes("Click!");
			}
		};

		mes("Hello, world!");
		button("Hello", fun() mes("Hello!"));

		while (0 == 0) {
			poll();
		};
		0
	"}
	return

#global

	app_main
